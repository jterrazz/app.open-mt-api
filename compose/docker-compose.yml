version: "3.9"
services:
  database_postgres:
    container_name: database_postgres
    image: postgres:13-alpine
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=open_mt
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d

  database_migration:
    container_name: database_migration
    build: ..
    image: open_mt/app
    depends_on:
      - database_postgres
    command: sh -c "yarn db:deploy-prod"
    environment:
      - NPM_TOKEN
      - DATABASE_URL=postgresql://postgres:postgres@database_postgres:5432/open_mt?pool_timeout=120&connect_timeout=120

  # NodeJS Application

  app_test:
    container_name: app_test
    build: ..
    image: open_mt/app
    depends_on:
      - database_postgres
    command: sh -c "yarn db:deploy-prod && yarn test"
    environment:
      - NPM_TOKEN
      - DATABASE_URL=postgresql://postgres:postgres@database_postgres:5432/open_mt?pool_timeout=120&connect_timeout=120
    volumes:
      - ../src:/app/src
      - ../tests:/app/tests
      - ../config:/app/config

  app_dev:
    container_name: app_dev
    build: ..
    image: open_mt/app
    depends_on:
      - database_postgres
    command: sh -c "yarn db:deploy-prod && yarn dev"
    environment:
      - NPM_TOKEN
      - DATABASE_URL=postgresql://postgres:postgres@database_postgres:5432/open_mt?pool_timeout=120&connect_timeout=120
    volumes:
      - ../src:/app/src
      - ../tests:/app/tests
      - ../config:/app/config

  app_start:
    container_name: app_start
    build: ..
    image: open_mt/app
    depends_on:
      - database_postgres
    command: sh -c "yarn db:deploy-prod && yarn start"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@database_postgres:5432/open_mt?pool_timeout=120&connect_timeout=120
      - NODE_ENV=production
    volumes:
      - ../src:/app/src
      - ../tests:/app/tests
      - ../config:/app/config
